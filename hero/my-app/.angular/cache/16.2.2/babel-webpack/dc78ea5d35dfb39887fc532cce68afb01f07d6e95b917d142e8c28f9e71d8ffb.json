{"ast":null,"code":"var _class;\nimport { HEROES } from './mock-heroes';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./messages.service\";\nexport class HeroService {\n  getHeros() {\n    const heros = of(HEROES);\n    this.messagesService.add('HeroService: fetched heroes');\n    return heros;\n  }\n  constructor(messagesService) {\n    this.messagesService = messagesService;\n  }\n}\n_class = HeroService;\n_class.ɵfac = function HeroService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.MessagesService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});","map":{"version":3,"names":["HEROES","of","HeroService","getHeros","heros","messagesService","add","constructor","i0","ɵɵinject","i1","MessagesService","factory","ɵfac"],"sources":["C:\\Users\\a1520\\Desktop\\hero\\my-app\\src\\app\\hero.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HEROES } from './mock-heroes';\nimport { Hero } from './heroes/hero.type'\nimport { Observable, of } from 'rxjs'\nimport { MessagesService } from './messages.service';\n@Injectable()\nexport class HeroService {\n  getHeros(): Observable<Hero[]> {\n    const heros = of(HEROES)\n    this.messagesService.add('HeroService: fetched heroes');\n    return heros\n  }\n  constructor(private messagesService: MessagesService) { }\n}\n"],"mappings":";AACA,SAASA,MAAM,QAAQ,eAAe;AAEtC,SAAqBC,EAAE,QAAQ,MAAM;;;AAGrC,OAAM,MAAOC,WAAW;EACtBC,QAAQA,CAAA;IACN,MAAMC,KAAK,GAAGH,EAAE,CAACD,MAAM,CAAC;IACxB,IAAI,CAACK,eAAe,CAACC,GAAG,CAAC,6BAA6B,CAAC;IACvD,OAAOF,KAAK;EACd;EACAG,YAAoBF,eAAgC;IAAhC,KAAAA,eAAe,GAAfA,eAAe;EAAqB;;SAN7CH,WAAW;;mBAAXA,MAAW,EAAAM,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,eAAA;AAAA;;SAAXT,MAAW;EAAAU,OAAA,EAAXV,MAAW,CAAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}